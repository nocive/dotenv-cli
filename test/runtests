#!/usr/bin/env bash
set -eu -o pipefail

# Run tests that expect only the .env file to be loaded.
#
# This tests must pass when running with all the method bellow:
#
#   env -i TERM="$TERM" LC_ALL=C dotenv            ./runtests
#   env -i TERM="$TERM" LC_ALL=C dotenv --         ./runtests
#   env -i TERM="$TERM" LC_ALL=C dotenv -e .env -- ./runtests

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd )

# shellcheck source=test.inc
source "$SCRIPT_DIR/test.inc"

function assert_equal() {
	local test_name="$1"
	local want_val="$2"

	if [ -z ${!test_name+x} ]; then
		fail_count=$((fail_count+1))
		red "FAIL $test_name"
		echo "  Want: '$want_val'"
		echo "  Have: unset"
		return
	fi

	local have_val="${!test_name}"

	if [ "$want_val" != "$have_val" ]; then
		fail_count=$((fail_count+1))
		red "FAIL $test_name"
		echo "  Want: '$want_val'"
		echo "  Have: '$have_val'"
	else
		pass_count=$((pass_count+1))
		green "PASS $test_name"
	fi

}

fail_count=0
pass_count=0

assert_equal "CASE_01" "A B C"
assert_equal "CASE_02" " A B C "

assert_equal "CASE_03" "A
B"

assert_equal "CASE_04" "A B C"
assert_equal "CASE_05" "A B C"

assert_equal "CASE_06" "A
B"

assert_equal "CASE_07" "
A
B
"
assert_equal "CASE_08" "A B"

echo ""
echo "Finished"
echo "Passed: $pass_count"

if [ "$fail_count" -gt "0" ]; then
	red "Failed: $fail_count"
	exit 1
fi
